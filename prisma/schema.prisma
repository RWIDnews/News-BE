datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  fullName      String
  role          Role           @default(USER)
  phoneNumber   String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  histories     History[]      @relation("UserHistories")
  favorites     Favorite[]     @relation("userFavorites")
  refreshTokens RefreshToken[] @relation("UserRefreshTokens")
}

model Publisher {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  url       String
  news      News[]   
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model News {
  id          Int        @id @default(autoincrement())
  title       String
  shortDesc   String
  description String
  category    String
  imageUrl    String
  author      String?
  links       String?    @unique
  publishedAt String?
  publisherId Int
  publisher   Publisher  @relation(fields: [publisherId], references: [id])
  histories   History[]  @relation("NewsHistories")
  favorites   Favorite[] @relation("NewsFavorites")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model History {
  id        Int      @id @default(autoincrement())
  userId    Int
  newsId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  user User @relation("UserHistories", fields: [userId], references: [id])
  news News @relation("NewsHistories", fields: [newsId], references: [id])
  @@unique([userId, newsId])
}

model Favorite {
  id        Int      @id @default(autoincrement())
  userId    Int
  newsId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  user User @relation("userFavorites", fields: [userId], references: [id])
  news News @relation("NewsFavorites", fields: [newsId], references: [id])
  @@unique([userId, newsId])
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  user      User     @relation("UserRefreshTokens", fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
}
